<%
  @command_requests = command_queue.command_requests.order(id: :asc)
  @command_handling_requests = command_queue.command_handling_requests.order(id: :asc)
  @command_histories = command_queue.command_histories.select(:command_uuid, :request_type, :created_at).order(id: :asc)
  @declarativemanagement_device_identifier = declarativemanagement_device_identifier
%>

<% if @command_requests.present? %>
<ul class="list-group">
  <% @command_requests.each do |command_request| %>
  <li class="list-group-item">
  <%= JSON.pretty_generate(command_request.request_payload) %>
  <%= command_request.created_at %>
  </li>
  <% end %>
</ul>
<% else %>
No commands.
<% end %>

<h3>Handling</h3>
<% if @command_handling_requests.present? %>
<ul class="list-group">
  <% @command_handling_requests.each do |command_handling_request| %>
  <li class="list-group-item">
  <%= JSON.pretty_generate(command_handling_request.request_payload) %>
  <%= command_handling_request.created_at %>
  </li>
  <% end %>
</ul>
<% else %>
No commands.
<% end %>

<script type="text/javascript">
function request(method, url, form) {
  return new Promise(function(resolve, reject) {
    let req = new XMLHttpRequest();
    req.open(method, url);

    req.onload = function() {
      if (req.status == 200) {
        resolve(req.response);
      }
      else {
        reject(Error(req.statusText));
      }
    };

    req.onerror = () => {
      reject(Error("ERROR"));
    };

    req.send(form);
  });
}

let selectTemplate = document.getElementById('select_template')
selectTemplate.addEventListener('change', (event) => {
  let payload = document.getElementById('input_payload')
  let selected = event.target.value
  if (selected == 'DeclarativeManagement') {
    let form = new FormData()
    form.append('class', 'DeclarativeManagement')
    form.append('declarativemanagement_device_identifier', '<%= @declarativemanagement_device_identifier %>')
    request('POST', '/commands/template.txt', form).then((response) => {
      payload.innerHTML = response.trim()
    })
    return
  }
  if (!!selected) {
    let form = new FormData()
    form.append('class', selected)
    request('POST', '/commands/template.txt', form).then((response) => {
      payload.innerHTML = response.trim()
    })
  }
})
</script>

<h2>Command History</h2>
<% if @command_histories.present? %>
<div class="list-group">
<% @command_histories.last(10).each do |command_history| %>
  <a href="/commands/<%= command_history.command_uuid %>" class="list-group-item list-group-item-action">
  <%= command_history.request_type %> - <%= command_history.command_uuid %> (<%= command_history.created_at %>)
  </a>
<% end %>
</div>
<% else %>
no histories
<% end %>
